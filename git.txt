1. git status (To check status of files)
2. git add file.ext (To add perticular file on git)
3. git add --a (To add all files to staging area)
3. git add . (To add all files to staging area)
4. git commit -m "Any Comment" (To commit all files to commit area)
5. touch .gitignore (To create a file named .gitignore. It will ignore all files from git which are written in it)
6. git diff (To compare files of working directory and staging area)
7. git diff --staged (To compare your previous commit with currently staging area)
8. git commit -a -m "Any commit" (To commit files directtly from only tracked area to commit area)
9. git log (To see all commits)
10. git rm file.ext (To remove a perticular file & add it to the staging area)
11. git mv file.ext file_renamed.ext (To rename a perticular file and add it to staging area)
12. git rm --cached file.ext (To untrack a perticular file)
13. git clone https://url folder_name (To copy files from github)
14. rm -rf .git (To remove all from git)
15. git log -p (To see all commits with difference)
16. git log -p -3 (To see 3 commits with difference)
17. git log --stat (To see commits with difference with a short details)
18. git log pretty=short (To see short commit)
19. git log pretty=full (To see commits with some extra detail)
20. git log pretty=oneline (To see commits in 1 line)
21. git log --since=2.days (To see commits of previous 2 days)
22. git log pretty=format:"%h -- %an" (To see commit in a defined format [ref:https://git.scm.com/docs/git-log])
23. git checkout -- file_name.ext (To go from modified area to unmodified i.e. revert/restore changes)